#!/usr/bin/python
import sys

from os.path import join, splitext, abspath, dirname, isfile
from subprocess import call


def save_geo_as_step(geo_file_name, step_file_name):
    """
    Save a .geo file into .step format
    """
    command = ['gmsh', '-save', geo_file_name, '-o', step_file_name]
    call(command)


def make_geo_and_step(geo_code, file_dir, base_file_name):
    """
    Take .geo code, write it to a .geo file and .step file
    """
    geo_file_name = join(file_dir, base_file_name + '.geo')
    step_file_name = join(file_dir, base_file_name + '.step')
    geo_file = open(geo_file_name, 'w')
    geo_file.write(geo_code)
    geo_file.close()
    save_geo_as_step(geo_file_name, step_file_name)


def make_circle_in_square(radius,
                          side_length,
                          file_dir):
    """
    Make a circle inside a squares
    as a .geo file and .step file in file-dir saved as

    file_dir/circle_in_square-rad{rad}-side{side}.geo/step
    """
    geo_code = """//+ Circle at origin
SetFactory("OpenCASCADE");
Circle(1) = {{0, 0, 0, {rad}, 0, 2*Pi}};
//+ Surrounding square
Point(2) = {{-{half_side}, -{half_side}, 0, 1.0}};
Point(3) = {{-{half_side},  {half_side}, 0, 1.0}};
Point(4) = {{ {half_side},  {half_side}, 0, 1.0}};
Point(5) = {{ {half_side}, -{half_side}, 0, 1.0}};
Line(2) = {{2, 3}};
Line(3) = {{3, 4}};
Line(4) = {{4, 5}};
Line(5) = {{5, 2}};
//+ Surface between circle and square
Curve Loop(1) = {{1}};  // This loop is the circle
Curve Loop(2) = {{2, 3, 4, 5}}; // This loop is the square
Plane Surface(1) = {{2, 1}};
""".format(rad=radius,
           half_side=side_length / 2)
    base_file_name = \
        "circle_in_square-rad{rad}-side{side}".format(
            rad=radius, side=side_length)

    make_geo_and_step(geo_code, file_dir, base_file_name)


# Build meshes
if __name__ == "__main__":
    mesh_dir = join(abspath(dirname(__file__)),
                    '../HelmholtzSommerfeldProblem/meshes/')
    make_circle_in_square(1.0, 6.0, mesh_dir)
